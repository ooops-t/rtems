# SPDX-License-Identifier: BSD-2-Clause

# Copyright 2008-2014 Chris Johns (chrisj@rtems.org)
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

This file describes the directives and concepts tested by this test set.

test set name: block06

Test 1: Get task 0 to get buffer 0 from the pool then release it twice.

Test 2: Get task 0 to get buffers 0 -> 4 from the pool hold them. Then get
        task 1 and task 2 to get them with blocking. The 2 tasks tests the
        priority blocking on the buffer.

Test 3: Read a block from disk into the buffer, modify the block and release
        it modified. Use a block great then 4 because 0 -> 4 are in the cache.

Test 4: Read every buffer in the pool and hold. Then get task 1 to ask for
        another buffer that is being accessed. It will block waiting for it to
		appear.
 
Test 5: Read every buffer in the pool and hold. Then get task 1 to ask for a
        new buffer. It will block waiting for one to appear.

Test 6: Get 5 buffers, release modify 4 then sync the last.

Test 7: Get 5 buffers, release modify them all then sync the device.

Test 8: Get 5 buffers, release modify the last 2 then the reset from 0.

TODO: if possible, break into separate tests

