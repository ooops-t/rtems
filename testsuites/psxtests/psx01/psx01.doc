# SPDX-License-Identifier: BSD-2-Clause

#  testsuites/psxtests/psx01/psx01.doc
#  COPYRIGHT (c) 1989-2009.
#  On-Line Applications Research Corporation (OAR).
#  Copyright (c) 2013 Annelies Odermann <annelies.odermann@gmail.com>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
This file describes the directives and concepts tested by this test set.

test set name: psx01

directives:
  pthread_create
  pthread_equal
  sched_get_priority_min
  sched_get_priority_max
  sched_rr_get_interval
  sched_yield
  uname

concepts:
+ Verify that uname gives proper error message when utsname is not defined,
  or proper data if it is 
+ Verify that sched_get_priority_min and sched_get_priority_max work as
  expected and give proper error messages when no policy is defined
+ Verify that sched_rr_get_interval works as expected and gives proper error
  messages
+ Verify that thread creation fails before thread limit is exceeded
+ Verify that thread yielding is operational
+ Verify that pthread_equal works as expected for different combinations of
  legitimate and illegitimate thread idâ€™s
