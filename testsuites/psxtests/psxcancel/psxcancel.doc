# SPDX-License-Identifier: BSD-2-Clause

#  COPYRIGHT (c) 1989-2009.
#  On-Line Applications Research Corporation (OAR).
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

This file describes the directives and concepts tested by this test set.

test set name:  psxcancel

directives:

  pthread_setcancelstate
  pthread_setcanceltype
  pthread_testcancel
  pthread_cleanup_push
  pthread_cleanup_pop
  pthread_create
  pthread_cancel
  pthread_detach
  pthread_join
 
concepts:

+ Verify that setting cancellation state and type to various
  combinations of enable/disable and deferred/asynchronous works
  as expected.

+ Verify that cleanup handlers that have been pushed do indeed run
  as expected at at cancellation point.

+ Exercise argument checking error cases in pthread_setcancelstate and
  pthread_setcanceltype.
  associated one mutex instance that it is an error for another task
  to attempt to block on the same condition variable using a different
  mutex.

+ Verify error conditions in pthread_mutexattr_settype

+ Verify normal paths through pthread_mutexattr_gettype

+ Verify normal paths through pthread_mutexattr_settype

+ Ensure that a pthread_detach() leads to a resource reclamation.

+ Ensure that a pthread_join() works if issued before a pthread_detach().
